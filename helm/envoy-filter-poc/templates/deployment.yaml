apiVersion: apps/v1
kind: Deployment
metadata:
  name: target-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: target-app
  template:
    metadata:
      labels:
        app: target-app
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: target-app
        image: ghcr.io/yurifrl/envoy-filter-poc
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: target-app
  namespace: default
spec:
  selector:
    app: target-app
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: target-app
  namespace: default
spec:
  hosts:
  {{ toYaml .Values.hosts | nindent 2 }}
  gateways:
  {{ toYaml .Values.gateways | nindent 2 }}
  http:
  - match:
    - uri:
        prefix: /filter
    route:
    - destination:
        host: target-app.default.svc.cluster.local
        port:
          number: 80
  - match:
    - uri:
        prefix: /plugin
    route:
    - destination:
        host: target-app.default.svc.cluster.local
        port:
          number: 80
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: target-app-gateway
  namespace: default
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*" 